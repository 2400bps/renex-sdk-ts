module.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=12)}([function(e,t){e.exports=require("bignumber.js")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.NOT_SUBMITTED="NOT_SUBMITTED",e.FAILED_TO_SETTLE="FAILED_TO_SETTLE",e.OPEN="OPEN",e.CONFIRMED="CONFIRMED",e.CANCELED="CANCELED",e.SETTLED="SETTLED",e.SLASHED="SLASHED",e.EXPIRED="EXPIRED"}(t.OrderStatus||(t.OrderStatus={})),function(e){e.RenEx="renex",e.RenExAtomic="atomic"}(t.OrderSettlement||(t.OrderSettlement={})),function(e){e.MIDPOINT="midpoint",e.LIMIT="limit",e.MIDPOINT_IOC="midpoint_ioc",e.LIMIT_IOC="limit_ioc"}(t.OrderType||(t.OrderType={})),function(e){e.BUY="buy",e.SELL="sell"}(t.OrderSide||(t.OrderSide={})),function(e){e.BTC="BTC",e.ETH="ETH",e.DGX="DGX",e.TUSD="TUSD",e.REN="REN",e.ZRX="ZRX",e.OMG="OMG"}(t.Token||(t.Token={})),function(e){e.ETH_BTC="ETH/BTC",e.DGX_ETH="DGX/ETH",e.TUSD_ETH="TUSD/ETH",e.REN_ETH="REN/ETH",e.ZRX_ETH="ZRX/ETH",e.OMG_ETH="OMG/ETH"}(t.MarketPair||(t.MarketPair={})),function(e){e.Withdraw="withdraw",e.Deposit="deposit"}(t.BalanceActionType||(t.BalanceActionType={})),function(e){e.Pending="pending",e.Done="done",e.Failed="failed",e.Replaced="replaced"}(t.TransactionStatus||(t.TransactionStatus={})),t.NullConsole={error:e=>null,log:e=>null},function(e){e.InvalidSwapper="invalid_swapper",e.ChangedSwapper="changed_swapper",e.NotConnected="not_connected",e.NotAuthorized="not_authorized",e.AtomNotAuthorized="atom_not_authorized",e.ConnectedUnlocked="connected_unlocked",e.ConnectedLocked="connected_locked"}(t.AtomicConnectionStatus||(t.AtomicConnectionStatus={}))},function(e,t){e.exports=require("bn.js")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),r=n(2),o=n(1);t.toSmallestUnit=function(e,t){return e.times(new a.BigNumber(10).exponentiatedBy(t.decimals))},t.fromSmallestUnit=function(e,t){return e.div(new a.BigNumber(10).exponentiatedBy(t.decimals))},t.supportedTokens=function(e){return Promise.resolve([o.Token.ETH,o.Token.DGX,o.Token.TUSD,o.Token.REN,o.Token.ZRX,o.Token.OMG])},t.tokenToID=function(e){switch(e){case o.Token.BTC:return 0;case o.Token.ETH:return 1;case o.Token.DGX:return 256;case o.Token.TUSD:return 257;case o.Token.REN:return 65536;case o.Token.ZRX:return 65537;case o.Token.OMG:return 65538}throw new Error(`Invalid token: ${e}`)},t.idToToken=function(e){switch(e){case 0:return o.Token.BTC;case 1:return o.Token.ETH;case 256:return o.Token.DGX;case 257:return o.Token.TUSD;case 65536:return o.Token.REN;case 65537:return o.Token.ZRX;case 65538:return o.Token.OMG}throw new Error(`Invalid token ID: ${e}`)},t.generateTokenPairing=function(e,t){const n=new r.BN(e).toArrayLike(Buffer,"be",4),a=new r.BN(t).toArrayLike(Buffer,"be",4);return new r.BN(Buffer.concat([n,a]))},t.splitTokenPairing=function(e){const t=e.toArrayLike(Buffer,"be",8);return[new r.BN(t.slice(0,4)).toNumber(),new r.BN(t.slice(4,8)).toNumber()]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ErrUnimplemented="Method not implemented.",t.ErrCanceledByUser="Transaction canceled",t.ErrSignatureCanceledByUser="Signature canceled",t.ErrUnsignedTransaction="Unable to sign transaction",t.ErrInvalidOrderDetails="Something went wrong while encoding order",t.ErrNumericalPrecision="Unsupported precision numbers",t.ErrFailedDeposit="Unable to deposit funds",t.ErrInsufficientBalance="Insufficient balance",t.ErrInsufficientFunds="Insufficient funds - please ensure you have enough ETH for the transaction fees",t.ErrUnsupportedFilterStatus="Unable to filter by specified status",t.ErrUnknownOrderStatus="Unknown order status"},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(8),s=n(3),i=n(1),u=n(6);t.getTokenDetails=(async(e,t)=>{let n=await e._cachedTokenDetails.get(t);if(!n){const a=e._contracts.renExTokens.tokens(s.tokenToID(t));e._cachedTokenDetails.set(t,a),n=await a}return{address:n.addr,decimals:new r.default(n.decimals).toNumber(),registered:n.registered}});const c=(e,n)=>Promise.all(n.map(async n=>{try{return await(async(e,n)=>{const a=await t.getTokenDetails(e,n);let u=new r.default(0);if(n===i.Token.ETH)u=new r.default(await e.getWeb3().eth.getBalance(e.getAddress()));else{let t=e._contracts.erc20.get(n);t||(t=new(o.withProvider(e.getWeb3().currentProvider,o.ERC20))(a.address),e._contracts.erc20.set(n,t)),u=new r.default(await t.balanceOf(e.getAddress()))}return s.fromSmallestUnit(u,a)})(e,n)}catch(e){return console.error(`Unable to retrieve non-deposited balance for token #${n}. ${e}`),new r.default(0)}})),d=(e,n)=>Promise.all(n.map(async n=>{try{return(async(e,n)=>{const a=await t.getTokenDetails(e,n),o=new r.default(await e._contracts.renExBalances.traderBalances(e.getAddress(),a.address));return s.fromSmallestUnit(o,a)})(e,n)}catch(e){return new r.default(0)}}));t.balances=(async(e,t)=>Promise.all([d(e,t),(async(e,t)=>{const n=u.fetchTraderOrders(e).then(e=>{const t=new Map;return e.forEach(e=>{if(e.status===i.OrderStatus.NOT_SUBMITTED||e.status===i.OrderStatus.OPEN||e.status===i.OrderStatus.CONFIRMED)if(e.computedOrderDetails.orderSettlement===i.OrderSettlement.RenEx){const n=e.computedOrderDetails.spendToken,a=t.get(n);a?t.set(n,a.plus(e.computedOrderDetails.spendVolume)):t.set(n,e.computedOrderDetails.spendVolume)}else{const n=e.computedOrderDetails.feeToken,a=t.get(n);a?t.set(n,a.plus(e.computedOrderDetails.feeAmount)):t.set(n,e.computedOrderDetails.feeAmount)}}),t}),a=u.fetchBalanceActions(e).then(e=>{const t=new Map;return e.forEach(e=>{if(e.action===i.BalanceActionType.Withdraw&&e.status===i.TransactionStatus.Pending){const n=t.get(e.token);n?t.set(e.token,n.plus(e.amount)):t.set(e.token,e.amount)}}),t}),[o,s]=await Promise.all([n,a]);return t.map(e=>{const t=o.get(e)||new r.default(0),n=s.get(e)||new r.default(0);return t.plus(n)})})(e,t),c(e,t)]).then(([e,n,a])=>{const o=new Map;return t.forEach((t,s)=>{const i=e[s],u=n[s];let c=i.minus(u);c.lt(new r.default(0))&&(c=new r.default(0)),o.set(t,{free:c,used:u,nondeposited:a[s]})}),o}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(22),r=n(24);t.fetchTraderOrders=(async(e,t={refresh:!0})=>{const n=await e._storage.getOrders();if(t.refresh){const t=await r.updateAllOrderStatuses(e,n);n.map((e,a)=>{const r=t.get(e.id);r&&(n[a].status=r)})}return n.sort((e,t)=>e.computedOrderDetails.date<t.computedOrderDetails.date?-1:1)}),t.fetchBalanceActions=(async(e,t={refresh:!0})=>{const n=await e._storage.getBalanceActions();if(t.refresh){const t=await a.updateAllBalanceActionStatuses(e,n);n.map((e,a)=>{const r=t.get(e.txHash);r&&(n[a].status=r)})}return n.sort((e,t)=>e.time<t.time?-1:1)})},function(e,t){e.exports=require("web3")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(36),o=a(n(46)),s=a(n(47)),i=a(n(48)),u=a(n(49)),c=a(n(50)),d=a(n(51)),l=a(n(52));t.ETH_CODE=1,t.withProvider=((e,t)=>(t.setProvider(e),t)),t.ERC20=r({abi:s.default}),t.DarknodeRegistry=r({abi:o.default}),t.Orderbook=r({abi:i.default}),t.RenExSettlement=r({abi:c.default}),t.RenExBalances=r({abi:u.default}),t.RenExTokens=r({abi:d.default}),t.Wyre=r({abi:l.default})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const o=a(n(17)),s=n(54),i=n(2),u=n(10),c=r(n(55)),d=n(1),l=n(56),p=n(11),m=n(19),y=n(31),f=n(18),h=n(3),w=12,b=12,g="0x0000000000000000000000000000000000000000";var v,E,k;!function(e){e[e.RenEx=1]="RenEx",e[e.RenExAtomic=2]="RenExAtomic"}(v=t.OrderSettlement||(t.OrderSettlement={})),function(e){e[e.MIDPOINT=0]="MIDPOINT",e[e.LIMIT=1]="LIMIT",e[e.MIDPOINT_IOC=2]="MIDPOINT_IOC",e[e.LIMIT_IOC=3]="LIMIT_IOC"}(E=t.OrderType||(t.OrderType={})),function(e){e[e.BUY=0]="BUY",e[e.SELL=1]="SELL"}(k=t.OrderParity||(t.OrderParity={}));t.Tuple=class extends(f.Record({c:0,q:0})){};class _ extends(f.Record({signature:"",id:"",type:E.LIMIT,parity:k.BUY,orderSettlement:v.RenEx,expiry:Math.round((new Date).getTime()/1e3),tokens:new i.BN(0),price:new i.BN(0),volume:new i.BN(0),minimumVolume:new i.BN(0),nonce:new i.BN(0)})){}t.Order=_;t.AtomAuthorizationRequest=class extends(f.Record({atomAddress:"",signature:""})){};t.OpenOrderRequest=class extends(f.Record({address:"",orderFragmentMappings:Array()})){};class O extends(f.Record({address:"",tokenID:0})){}t.WithdrawRequest=O;class T extends(f.Record({id:"",orderId:"",orderType:E.LIMIT,orderParity:k.BUY,orderSettlement:v.RenEx,orderExpiry:Math.round((new Date).getTime()/1e3),tokens:"",price:["",""],volume:["",""],minimumVolume:["",""],nonce:"",index:0})){}t.OrderFragment=T;class x extends(f.Record({id:"",darknodes:u.List(),orderFragments:u.List()})){}async function M(e,t,n){let a;try{a=await e.getOrders(t,n)}catch(e){throw console.error("Failed to get call getOrders in ordersBatch"),e}const r=a[0],o=a[1],s=a[2];let c=u.List();for(let e=0;e<r.length;e++){const t=y.orderbookStateToOrderStatus(new i.BN(s[e]).toNumber());c=c.push([r[e],t,o[e]])}return c}function S(e,t){return Buffer.from(e.utils.keccak256(JSON.stringify(t)).slice(2),"hex").toString("base64")}async function B(e,t,n){const a=await e.getDarknodePublicKey(t);if(null===a||0===a.length)return n.error(`Unable to retrieve public key for ${t}`),null;const r=Buffer.from(a.slice(2),"hex"),o=r.slice(0,8).readUInt32BE(4),i=r.slice(8),u=new s;return u.importKey({n:i,e:o}),u.setOptions({encryptionScheme:{scheme:"pkcs1_oaep",hash:"sha1"}}),u}function D(e,t,n){if(null===e)return new p.EncodedData("",p.Encodings.BASE64);const a=new i.BN(t.index).toArrayLike(Buffer,"be",n),r=t.value.toArrayLike(Buffer,"be",n),o=Buffer.concat([a,r]);return new p.EncodedData(e.encrypt(o,"buffer"),p.Encodings.BUFFER)}t.Pod=x,t.randomNonce=function(e){let t=e();for(;t.gte(c.PRIME);)t=e();return t},t.authorizeSwapper=async function(e,t){const n=await o.default.post(`${e}/authorize`,t.toJS());if(201===n.status)return!0;if(401===n.status)throw new Error("Could not authorize swapper. Reason: address is not KYC'd");throw new Error(`Could not authorize swapper. Status code: ${n.status}`)},t.checkAtomAuthorization=async function(e,t,n){return o.default.get(`${e}/authorized/${t}`).then(e=>{if(200!==e.status)throw new Error("Unexpected status code: "+e.status);return new p.EncodedData(e.data.atomAddress,p.Encodings.HEX).toHex().toLowerCase()===n.toLowerCase()}).catch(e=>(console.error(e),!1))},t.createOrder=function(e,t){const n=m.MarketPairs.get(e.symbol);if(!n)throw new Error(`Couldn't find market information for market: ${e.symbol}`);const a=n.base,r=n.quote,o=e.side===d.OrderSide.BUY?r:a,s=e.side===d.OrderSide.BUY?a:r,u=l.adjustDecimals(e.price,0,w),c=l.adjustDecimals(e.volume,0,b),p=l.adjustDecimals(e.minVolume,0,b),y=e.side===d.OrderSide.BUY?h.generateTokenPairing(h.tokenToID(o),h.tokenToID(s)):h.generateTokenPairing(h.tokenToID(s),h.tokenToID(o));return new _({type:function(e){switch(e){case d.OrderType.MIDPOINT:return E.MIDPOINT;case d.OrderType.LIMIT:return E.LIMIT;case d.OrderType.MIDPOINT_IOC:return E.MIDPOINT_IOC;case d.OrderType.LIMIT_IOC:return E.LIMIT_IOC}}(e.type),orderSettlement:function(e){switch(e){case d.OrderSettlement.RenEx:return v.RenEx;case d.OrderSettlement.RenExAtomic:return v.RenExAtomic}}(n.orderSettlement),expiry:e.expiry,nonce:t||new i.BN(0),parity:function(e){switch(e){case d.OrderSide.BUY:return k.BUY;case d.OrderSide.SELL:return k.SELL}}(e.side),tokens:y,price:u,volume:c,minimumVolume:p})},t.submitOrderFragments=async function(e,t){try{const n=await o.default.post(`${e}/orders`,t.toJS());if(201!==n.status)throw new Error(`Unexpected status code returned by Ingress (STATUS ${n.status})`);return new p.EncodedData(n.data.signature,p.Encodings.BASE64)}catch(e){throw e.response?401===e.response.status?new Error("KYC verification failed in Ingress"):new Error(`Ingress returned status ${e.response.status} with reason: ${e.response.data}`):e}},t.requestWithdrawalSignature=async function(e,t,n){const a=new O({address:t.slice(2),tokenID:h.tokenToID(n)}),r=await o.default.post(`${e}/withdrawals`,a.toJS());if(201!==r.status)throw new Error("Unexpected status code: "+r.status);return new p.EncodedData(r.data.signature,p.Encodings.BASE64)},t.getOrders=async function(e,t,n){let a;try{a=new i.BN(await e.ordersCount()).toNumber()}catch(e){throw console.error("Failed to call orderCount in getOrders"),e}const r=n||a-(t||0);let o=void 0!==t?t:Math.max(0,a-r),s=Math.min(r,500);const c=r?o+Math.min(a,r):a;let d=u.List();for(;;){if(o>=c)return d;s=Math.min(s,c-o);const t=await M(e,o,s);d=d.concat(t).toList(),o+=s}},t.getOrderID=function(e,t){const[n,a]=h.splitTokenPairing(t.tokens),r=t.parity===k.BUY?t.tokens:h.generateTokenPairing(a,n),o=Buffer.concat([new i.BN(t.type).toArrayLike(Buffer,"be",1),new i.BN(t.expiry).toArrayLike(Buffer,"be",8),t.nonce.toArrayLike(Buffer,"be",8),new i.BN(t.orderSettlement).toArrayLike(Buffer,"be",8),r.toArrayLike(Buffer,"be",8),new i.BN(t.price).toArrayLike(Buffer,"be",32),new i.BN(t.volume).toArrayLike(Buffer,"be",32),new i.BN(t.minimumVolume).toArrayLike(Buffer,"be",32)]);return new p.EncodedData(e.utils.keccak256(`0x${o.toString("hex")}`),p.Encodings.HEX)},t.buildOrderMapping=async function(e,t,n,a){const r=await async function(e,t,n){const a=await async function(e){const t=[];let n=g;do{const a=await e.getDarknodes(n,10);t.push(...a.filter(e=>e!==g&&e!==n)),[n]=a.slice(-1)}while(n!==g);return t}(t),r=new i.BN(await t.minimumPodSize()).toNumber();n.log(`Using minimum pod size ${r}`);const o=await t.currentEpoch();if(!a.length)return Promise.reject(new Error("no darknodes in contract"));if(0===r)return Promise.reject(new Error("invalid minimum pod size (0)"));const s=new i.BN(o[0]),c=new i.BN(a.length);let d=s.mod(c),l=u.List();for(let e=0;e<a.length;e++)l=l.set(e,-1);n.log("Calculating pods");let m=u.List();const y=Math.floor(a.length/r)||1;for(let e=0;e<y;e++)m=m.push(new x);for(let e=0;e<a.length;e++){for(;-1!==l.get(d.toNumber());)d=(d=d.add(new i.BN(1))).mod(c);l=l.set(d.toNumber(),e);const t=e%y,n=new x({darknodes:m.get(t,new x).darknodes.push(a[d.toNumber()])});m=m.set(t,n),d=(d=d.add(s)).mod(c)}for(let t=0;t<m.size;t++){let n=u.List();for(const e of m.get(t,new x).darknodes.toArray())n=n.push(Buffer.from(e.substring(2),"hex"));const a=new p.EncodedData(e.utils.keccak256(`0x${Buffer.concat(n.toArray()).toString("hex")}`),p.Encodings.HEX),r=new x({id:a.toBase64(),darknodes:m.get(t,new x).darknodes});m=m.set(t,r)}return m}(e,t,a),o=y.priceToCoExp(n.price),s=y.volumeToCoExp(n.volume),d=y.volumeToCoExp(n.minimumVolume);return r.map(async r=>{const l=r.darknodes.size,m=Math.floor(2*(l+1)/3);a.log(`Splitting secret shares for pod ${r.id.slice(0,8)}...`);const y=c.split(l,m,new i.BN(n.tokens)),f=c.split(l,m,new i.BN(o.co)),h=c.split(l,m,new i.BN(o.exp)),w=c.split(l,m,new i.BN(s.co)),b=c.split(l,m,new i.BN(s.exp)),g=c.split(l,m,new i.BN(d.co)),v=c.split(l,m,new i.BN(d.exp)),E=c.split(l,m,n.nonce);let k=u.List();for(let o=0;o<l;o++){const s=r.darknodes.get(o,void 0);if(void 0===s)throw new Error("invalid darknode access");a.log(`Encrypting for darknode ${new p.EncodedData("0x1b14"+s.slice(2),p.Encodings.HEX).toBase58().slice(0,8)}...`);let i=null;try{i=await B(t,s,a)}catch(e){Promise.reject(e)}const[u,c,d,l,m,_,O,x]=[y.get(o),f.get(o),h.get(o),w.get(o),b.get(o),g.get(o),v.get(o),E.get(o)];if(void 0===u||void 0===c||void 0===d||void 0===l||void 0===m||void 0===_||void 0===O||void 0===x)throw new Error("invalid share access");let M=new T({orderId:n.id,orderType:n.type,orderParity:n.parity,orderSettlement:n.orderSettlement,orderExpiry:n.expiry,tokens:D(i,u,8).toBase64(),price:[D(i,c,8).toBase64(),D(i,d,8).toBase64()],volume:[D(i,l,8).toBase64(),D(i,m,8).toBase64()],minimumVolume:[D(i,_,8).toBase64(),D(i,O,8).toBase64()],nonce:D(i,x,8).toBase64(),index:o+1});M=M.set("id",S(e,M)),k=k.push(M)}return r.set("orderFragments",k)}).reduce(async(e,t)=>{const n=await e,a=await t;return n.set(a.id,a.orderFragments)},Promise.resolve(u.Map()))},t.encryptForDarknode=D},function(e,t){e.exports=require("immutable")},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(57)),o=n(18);var s;!function(e){e.AUTO="auto",e.HEX="hex",e.BASE64="base64",e.BUFFER="buffer",e.UNKNOWN="unknown"}(s=t.Encodings||(t.Encodings={}));const i={value:"",encoding:s.AUTO},u=(e,t)=>{if(void 0!==t&&("string"==typeof e&&t!==s.BUFFER?e={value:e,encoding:t}:e instanceof Buffer&&t===s.BUFFER&&(e={value:e,encoding:t})),"string"==typeof e&&(e={value:e,encoding:s.AUTO}),e instanceof Buffer&&(e={value:e,encoding:s.BUFFER}),e.encoding===s.AUTO&&("string"==typeof e.value?""===e.value||"0x"===e.value.slice(0,2)||e.value.match("^[A-Fa-f0-9]+$")?e.encoding=s.HEX:e.value.match("^[A-Za-z0-9+/=]+$")&&(e.encoding=s.BASE64):e.value instanceof Buffer&&(e.encoding=s.BUFFER)),e.encoding===s.BUFFER&&!(e.value instanceof Buffer))throw new Error("invalid buffer");if(e.encoding===s.HEX){if("string"!=typeof e.value)throw new Error("invalid hex");if("0x"===e.value.slice(0,2)&&(e.value=e.value.slice(2)),""===e.value&&(e.value="00"),e.value.length%2==1&&(e.value="0"+e.value),!e.value.match("^[A-Fa-f0-9]+$"))throw new Error("invalid hex")}return e};class c extends(o.Record(i)){constructor(e,t){e instanceof c&&(e={value:e.value,encoding:e.encoding}),super(e=u(e,t))}toHex(e="0x"){switch(this.encoding){case s.HEX:return e+this.value;case s.BASE64:return e+Buffer.from(this.value,"base64").toString("hex");case s.BUFFER:return e+this.value.toString("hex");default:throw new Error("Unable to convert to hexadecimal representation")}}toBase64(){switch(this.encoding){case s.HEX:return Buffer.from(this.value,"hex").toString("base64");case s.BASE64:return this.value;case s.BUFFER:return this.value.toString("base64");default:throw new Error("Unable to convert to base64 representation")}}toBase58(){const e=this.toBuffer();return r.encode(e)}toBuffer(){switch(this.encoding){case s.HEX:return Buffer.from(this.value,"hex");case s.BASE64:return Buffer.from(this.value,"base64");case s.BUFFER:return this.value;default:throw new Error("Unable to convert to buffer")}}toString(){return this.toHex()}}t.EncodedData=c},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=a(n(7)),s=n(2),i=a(n(33)),u=n(8),c=n(53),d=n(29),l=n(19),p=n(58),m=n(3),y=n(20),f=n(22),h=n(5),w=n(23),b=n(24),g=n(32),v=n(6),E=n(61),k=n(1);!function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(1));t.default=class{constructor(e,t){switch(this._atomConnectionStatus=k.AtomicConnectionStatus.NotConnected,this._atomConnectedAddress="",this._cachedTokenDetails=new Map,this.atom={getStatus:()=>y.currentAtomConnectionStatus(this),isConnected:()=>y.atomConnected(this),refreshStatus:()=>y.refreshAtomConnectionStatus(this),resetStatus:()=>y.resetAtomConnection(this),authorize:()=>y.authorizeAtom(this),fetchBalances:e=>y.atomicBalances(this,e),fetchAddresses:e=>y.atomicAddresses(e)},this.utils={normalizePrice:(e,t)=>d.toOriginalType(d.normalizePrice(new r.default(e),t),e),normalizeVolume:(e,t)=>d.toOriginalType(d.normalizeVolume(new r.default(e),t),e),normalizeOrder:e=>{const t=Object.assign(e,{});return t.price=this.utils.normalizePrice(e.price,e.side===k.OrderSide.SELL),t.volume=this.utils.normalizeVolume(e.volume),e.minVolume&&(t.minVolume=this.utils.normalizeVolume(e.minVolume)),t}},this._address="",this.fetchBalances=(e=>h.balances(this,e)),this.fetchBalanceActionStatus=(e=>f.updateBalanceActionStatus(this,e)),this.fetchOrderStatus=(e=>g.status(this,e)),this.fetchMatchDetails=(e=>g.matchDetails(this,e)),this.fetchOrderbook=(e=>b.getOrders(this,e)),this.fetchOrderBlockNumber=(e=>b.getOrderBlockNumber(this,e)),this.fetchMarkets=(()=>l.fetchMarkets(this)),this.fetchSupportedTokens=(()=>m.supportedTokens(this)),this.fetchSupportedAtomicTokens=(()=>y.supportedAtomicTokens(this)),this.deposit=((e,t)=>f.deposit(this,e,t)),this.withdraw=((e,t,n=!1)=>f.withdraw(this,e,t,n)),this.openOrder=((e,t)=>b.openOrder(this,e,t)),this.cancelOrder=(e=>b.cancelOrder(this,e)),this.fetchDarknodeFeePercent=(()=>g.darknodeFees(this)),this.fetchMinEthTradeVolume=(()=>b.getMinEthTradeVolume(this)),this.fetchGasPrice=(()=>w.getGasPrice(this)),this.fetchTraderOrders=((e={refresh:!0})=>v.fetchTraderOrders(this,e)),this.fetchBalanceActions=((e={refresh:!0})=>v.fetchBalanceActions(this,e)),this.refreshBalanceActionStatuses=(async()=>f.updateAllBalanceActionStatuses(this)),this.refreshOrderStatuses=(async()=>b.updateAllOrderStatuses(this)),this.getWeb3=(()=>this._web3),this.getAddress=(()=>this._address),this.getConfig=(()=>this._config),this.setAddress=(e=>{this._address=e,"localStorage"===this.getConfig().storageProvider&&(this._storage=new i.default(e))}),this.updateProvider=(e=>{this._web3=new o.default(e),this._contracts={renExSettlement:new(u.withProvider(this.getWeb3().currentProvider,u.RenExSettlement))(this._networkData.contracts[0].renExSettlement),renExBalances:new(u.withProvider(this.getWeb3().currentProvider,u.RenExBalances))(this._networkData.contracts[0].renExBalances),orderbook:new(u.withProvider(this.getWeb3().currentProvider,u.Orderbook))(this._networkData.contracts[0].orderbook),darknodeRegistry:new(u.withProvider(this.getWeb3().currentProvider,u.DarknodeRegistry))(this._networkData.contracts[0].darknodeRegistry),renExTokens:new(u.withProvider(this.getWeb3().currentProvider,u.RenExTokens))(this._networkData.contracts[0].renExTokens),erc20:new Map,wyre:new(u.withProvider(this.getWeb3().currentProvider,u.Wyre))(this._networkData.contracts[0].wyre)}}),this._web3=new o.default(e),this._config=c.generateConfig(t),this.getConfig().network){case"mainnet":this._networkData=p.networks.mainnet;break;case"testnet":this._networkData=p.networks.testnet;break;default:throw new Error(`Unsupported network field: ${this.getConfig().network}`)}switch(this._cachedTokenDetails=this._cachedTokenDetails.set(k.Token.BTC,Promise.resolve({addr:"0x0000000000000000000000000000000000000000",decimals:new s.BN(8),registered:!0})).set(k.Token.ETH,Promise.resolve({addr:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",decimals:new s.BN(18),registered:!0})).set(k.Token.DGX,Promise.resolve({addr:this._networkData.tokens.DGX,decimals:new s.BN(9),registered:!0})).set(k.Token.TUSD,Promise.resolve({addr:this._networkData.tokens.TUSD,decimals:new s.BN(18),registered:!0})).set(k.Token.REN,Promise.resolve({addr:this._networkData.tokens.REN,decimals:new s.BN(18),registered:!0})).set(k.Token.ZRX,Promise.resolve({addr:this._networkData.tokens.ZRX,decimals:new s.BN(18),registered:!0})).set(k.Token.OMG,Promise.resolve({addr:this._networkData.tokens.OMG,decimals:new s.BN(18),registered:!0})),this.getConfig().storageProvider){case"localStorage":this._storage=new i.default(this._address);break;case"memory":this._storage=new E.MemoryStorage;break;default:if("string"==typeof this.getConfig().storageProvider)throw new Error(`Unsupported storage option: ${this.getConfig().storageProvider}.`);this._storage=this.getConfig().storageProvider}this._contracts={renExSettlement:new(u.withProvider(this.getWeb3().currentProvider,u.RenExSettlement))(this._networkData.contracts[0].renExSettlement),renExBalances:new(u.withProvider(this.getWeb3().currentProvider,u.RenExBalances))(this._networkData.contracts[0].renExBalances),orderbook:new(u.withProvider(this.getWeb3().currentProvider,u.Orderbook))(this._networkData.contracts[0].orderbook),darknodeRegistry:new(u.withProvider(this.getWeb3().currentProvider,u.DarknodeRegistry))(this._networkData.contracts[0].darknodeRegistry),renExTokens:new(u.withProvider(this.getWeb3().currentProvider,u.RenExTokens))(this._networkData.contracts[0].renExTokens),erc20:new Map,wyre:new(u.withProvider(this.getWeb3().currentProvider,u.Wyre))(this._networkData.contracts[0].wyre)}}}},function(e,t,n){var a=n(41),r=n(27).inherits;n(7);r(s,a);var o=9e4;function s(e,t,n,a){var r,i=parseInt(e.gas)||o,u="";a&&(u=`Reason given: ${a}.`),r=n.gasUsed===i?"Transaction: "+t+" exited with an error (status 0) after consuming all gas.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `assert` statements.\n     - has enough gas to execute the full transaction.\n     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).":`Transaction: ${t} exited with an error (status 0). ${u}\n`+"     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",s.super_.call(this,r),this.tx=t,this.receipt=n,this.reason=a}e.exports=s},function(e,t,n){var a=n(7),r=n(42),o=n(28),s=new a,i={is_object:function(e){return"object"==typeof e&&!Array.isArray(e)},is_big_number:function(e){return"object"==typeof e&&(s.utils.isBN(e)||s.utils.isBigNumber(e))},decodeLogs:function(e,t){var n=this;return i.toTruffleLog(e,t).map(function(e){var t=n.events[e.topics[0]];if(null==t)return null;var a=i.merge({},e);a.event=t.name,a.topics=t.anonymous?a.topics:a.topics.slice(1);const s=r.decodeLog(t.inputs,a.data,a.topics);return a.args=o.numbers.call(n,s,t.inputs),delete a.data,delete a.topics,a}).filter(function(e){return null!=e})},toTruffleLog:function(e,t){if(t&&"boolean"==typeof t){var n=[];return n.push(e),n.map(function(e){return e.data=e.raw.data,e.topics=e.raw.topics,e})}return e.forEach(e=>{e.raw&&(e.data=e.raw.data,e.topics=e.raw.topics)}),e},merge:function(){for(var e={},t=Array.prototype.slice.call(arguments),n=0;n<t.length;n++)for(var a=t[n],r=Object.keys(a),o=0;o<r.length;o++){var s=r[o],i=a[s];e[s]=i}return e},parallel:function(e,t){if(t=t||function(){},!e.length)return t(null,[]);var n=0,a=new Array(e.length);e.forEach(function(r,o){r(function(r,s){r?(t(r),t=function(){}):(n++,a[o]=s,n>=e.length&&t(null,a))})})},linkBytecode:function(e,t){return Object.keys(t).forEach(function(n){var a=t[n],r=new RegExp("__"+n+"_+","g");e=e.replace(r,a.replace("0x",""))}),e},getTxParams:function(e){var t={},n=e[e.length-1];return i.is_object(n)&&!i.is_big_number(n)&&(t=e.pop()),t=i.merge(this.class_defaults,t)},checkLibraries:function(){var e=this.binary.match(/__[^_]+_+/g);if(null!=e){e=e.map(function(e){return e.replace(/_/g,"")}).sort().filter(function(e,t,n){return t+1>=n.length||e!=n[t+1]}).join(", ");var t=this.contractName+" contains unresolved libraries. You must deploy and link the following libraries before you can deploy a new version of "+this.contractName+": "+e;throw new Error(t)}}};e.exports=i},function(e,t){const n={_extract:function(e,t){if(!e||!e.error&&!e.result)return;const n=e&&"object"==typeof e&&e.error&&e.error.data,a=e&&"object"==typeof e&&"string"==typeof e.result;if(n){const n=e.error.data,a=Object.keys(n)[0];if(n[a].return&&n[a].return.includes("0x08c379a0"))return t.eth.abi.decodeParameter("string",n[a].return.slice(10))}else if(a&&e.result.includes("0x08c379a0"))return t.eth.abi.decodeParameter("string",e.result.slice(10))},get:function(e,t){const a={jsonrpc:"2.0",method:"eth_call",params:[e],id:(new Date).getTime()};return new Promise(e=>{t.currentProvider.sendAsync(a,(a,r)=>{const o=n._extract(r,t);e(o)})})}};e.exports=n},function(e,t,n){var a=n(13),r=n(14),o=n(15),s={maxConfirmations:24,defaultTimeoutBlocks:50,timeoutMessage:"50 blocks",ignoreTimeoutError:function(e,t){var n=t.message&&t.message.includes(s.timeoutMessage),a=e.contract&&e.contract.timeoutBlocks&&e.contract.timeoutBlocks>s.defaultTimeoutBlocks;return n&&a},setup:function(e,t){e.on("error",s.error.bind(e,t)),e.on("transactionHash",s.hash.bind(e,t)),e.on("confirmation",s.confirmation.bind(e,t)),e.on("receipt",s.receipt.bind(e,t))},error:function(e,t){s.ignoreTimeoutError(e,t)||(e.promiEvent.eventEmitter.emit("error",t),this.removeListener("error",s.error))},hash:function(e,t){e.transactionHash=t,e.promiEvent.eventEmitter.emit("transactionHash",t),this.removeListener("transactionHash",s.hash)},confirmation:function(e,t,n){e.promiEvent.eventEmitter.emit("confirmation",t,n),t===s.maxConfirmations+1&&this.removeListener("confirmation",s.confirmation)},receipt:async function(e,t){var n;if(t.transactionHash||(t.transactionHash=e.transactionHash,t.status=1),n=t.logs?r.decodeLogs.call(e.contract,t.logs):[],e.promiEvent.eventEmitter.emit("receipt",t),e.onlyEmitReceipt)e.receipt=t;else{if(!t.status){var i=await o.get(e.params,e.contract.web3),u=new a(e.params,t.transactionHash,t,i);return e.promiEvent.reject(u)}e.promiEvent.resolve({tx:t.transactionHash,receipt:t,logs:n}),this.removeListener("receipt",s.receipt)}}};e.exports=s},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(10));t.Record=function(e){return class extends(r.Record(e)){constructor(e){super(r.fromJS(e||{}))}get(e){return super.get(e)}set(e,t){return super.set(e,t)}merge(e){return super.merge(e)}toJS(){return super.toJS()}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(10),r=n(1);t.MarketPairs=a.OrderedMap().set(r.MarketPair.ETH_BTC,{symbol:r.MarketPair.ETH_BTC,orderSettlement:r.OrderSettlement.RenExAtomic,quote:r.Token.BTC,base:r.Token.ETH}).set(r.MarketPair.DGX_ETH,{symbol:r.MarketPair.DGX_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.DGX}).set(r.MarketPair.TUSD_ETH,{symbol:r.MarketPair.TUSD_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.TUSD}).set(r.MarketPair.REN_ETH,{symbol:r.MarketPair.REN_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.REN}).set(r.MarketPair.ZRX_ETH,{symbol:r.MarketPair.ZRX_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.ZRX}).set(r.MarketPair.OMG_ETH,{symbol:r.MarketPair.OMG_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.OMG}),t.fetchMarkets=async function(e){return Promise.resolve(t.MarketPairs.valueSeq().toArray())}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(21),s=n(3),i=n(1),u=n(5),c=n(6);t.currentAtomConnectionStatus=(e=>e._atomConnectionStatus),t.atomConnected=(e=>{const n=t.currentAtomConnectionStatus(e);return n===i.AtomicConnectionStatus.ConnectedLocked||n===i.AtomicConnectionStatus.ConnectedUnlocked}),t.resetAtomConnection=(async e=>(e._atomConnectedAddress="",e._atomConnectionStatus=i.AtomicConnectionStatus.NotConnected,t.refreshAtomConnectionStatus(e))),t.refreshAtomConnectionStatus=(async e=>(e._atomConnectionStatus=await d(e),e._atomConnectionStatus));const d=async e=>{try{const t=await o.challengeSwapper(),n=o.checkSigner(e.getWeb3(),t);if(""===e._atomConnectedAddress){if(await o.getAtomicBalances().then(e=>e.ethereum.address)!==n)return i.AtomicConnectionStatus.InvalidSwapper;e._atomConnectedAddress=n}else if(e._atomConnectedAddress!==n)return i.AtomicConnectionStatus.ChangedSwapper;return e.getAddress()?o._connectToAtom(t,e._networkData.ingress,e.getAddress()):i.AtomicConnectionStatus.NotConnected}catch(e){return i.AtomicConnectionStatus.NotConnected}};t.authorizeAtom=(async e=>{const n=await t.atomicAddresses([i.Token.ETH]).then(e=>e[0]);return await o._authorizeAtom(e.getWeb3(),e._networkData.ingress,n,e.getAddress()),t.refreshAtomConnectionStatus(e)}),t.supportedAtomicTokens=(async e=>[i.Token.BTC,i.Token.ETH]);t.atomicAddresses=(e=>o.getAtomicBalances().then(t=>e.map(e=>{switch(e){case i.Token.ETH:return t.ethereum.address;case i.Token.BTC:return t.bitcoin.address}return""})));t.atomicBalances=(async(e,t)=>Promise.all([(async(e,t)=>o.getAtomicBalances().then(n=>Promise.all(t.map(async t=>{const a=await u.getTokenDetails(e,t);let o;switch(t){case i.Token.ETH:o=new r.default(n.ethereum.amount);break;case i.Token.BTC:o=new r.default(n.bitcoin.amount)}return o?s.fromSmallestUnit(o,a):new r.default(0)}))))(e,t),(async(e,t)=>c.fetchTraderOrders(e).then(e=>{const n=new Map;return e.forEach(e=>{if(e.computedOrderDetails.orderSettlement===i.OrderSettlement.RenExAtomic&&(e.status===i.OrderStatus.NOT_SUBMITTED||e.status===i.OrderStatus.OPEN||e.status===i.OrderStatus.CONFIRMED)){const t=e.computedOrderDetails.spendToken,a=n.get(t);a?n.set(t,a.plus(e.computedOrderDetails.spendVolume)):n.set(t,e.computedOrderDetails.spendVolume)}}),t.map(e=>n.get(e)||new r.default(0))}))(e,t)]).then(([e,n])=>{let a=new Map;return t.forEach((t,o)=>{a=a.set(t,{used:n[o],free:r.default.max(new r.default(0),e[o].minus(n[o]))})}),a}))},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(17)),o=a(n(30)),s=n(1),i=n(11),u=n(4),c=n(9),d="http://localhost:18516";async function l(){let e;try{e=(await r.default.get(`${d}/balances`)).data}catch(e){throw console.error(e),new Error(t.ErrorUnableToRetrieveStatus)}return e}t.ErrorAtomNotLinked="Atom back-end not linked to wallet",t.ErrorUnableToConnect="Unable to connect go Atom back-end",t.ErrorAddressNotAuthorized="Ethereum address not authorized for Atom",t.ErrorUnableToRetrieveStatus="Unable to retrieve order status",t.ErrorUnableToRetrieveBalances="Unable to retrieve Atomic balances",t.checkSigner=function(e,t){const n=JSON.stringify(t.whoAmI),a="Ethereum Signed Message:\n"+n.length+n,r=e.utils.keccak256(a),o="0x"+t.signature.slice(0,64),s="0x"+t.signature.slice(64,128),i="0x"+t.signature.slice(128,130),u="0x"+(parseInt(i,16)+27).toString(16);return e.eth.accounts.recover({messageHash:r,r:o,s:s,v:u})},t.challengeSwapper=async function(){const e=o.default.randomBytes(20).toString("hex"),t=await r.default.get(`${d}/whoami/${e}`).then(e=>e.data);if(void 0===t||void 0===t.whoAmI||void 0===t.whoAmI.authorizedAddresses||null===t.whoAmI.authorizedAddresses)throw new Error("Failed the swapper whoami challenge.");return t},t._connectToAtom=async function(e,t,n){const a=e.whoAmI.authorizedAddresses.map(e=>new i.EncodedData(e,i.Encodings.HEX).toHex().toLowerCase()),r=new i.EncodedData(n,i.Encodings.HEX).toHex().toLowerCase();if(-1===a.indexOf(r))return s.AtomicConnectionStatus.NotAuthorized;const o=await l().then(e=>e.ethereum.address);return await c.checkAtomAuthorization(t,n,o)?s.AtomicConnectionStatus.ConnectedUnlocked:s.AtomicConnectionStatus.AtomNotAuthorized},t._authorizeAtom=async function(e,t,n,a){const r=await async function(e,t,n){const a=e.utils.toHex("RenEx: authorize: "),r=new i.EncodedData(t,i.Encodings.HEX),o=a+r.toHex("");let s;try{s=new i.EncodedData(await e.eth.personal.sign(o,n))}catch(e){return e.message.match(/User denied message signature/)?Promise.reject(new Error(u.ErrSignatureCanceledByUser)):Promise.reject(new Error(u.ErrUnsignedTransaction))}const d=s.toBuffer();return 27!==d[64]&&28!==d[64]||(d[64]=d[64]-27),new c.AtomAuthorizationRequest({atomAddress:r.toHex(),signature:d.toString("base64")})}(e,n,a);await c.authorizeSwapper(t,r)},t.submitOrderToAtom=async function(e){const t={orderID:e.toHex("")};let n;try{n=(await r.default.post(`${d}/orders`,t)).data}catch(e){throw e}if(n.orderID!==t.orderID)throw new Error("Invalid order ID returned by Atom")},t.getOrderStatus=async function(e){let n;try{n=(await r.default.get(`${d}/status/${e.toHex("")}`)).data}catch(e){throw console.error(e),new Error(t.ErrorUnableToRetrieveStatus)}return n.status},t.getAtomicBalances=l},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(1),i=n(8),u=n(4),c=n(9),d=n(3),l=n(5),p=n(23),m=n(6);t.updateBalanceActionStatus=(async(e,t)=>{const n=await p.getTransactionStatus(e,t);return e._storage.getBalanceAction(t).then(async t=>{t&&(t.status=n,await e._storage.setBalanceAction(t))}).catch(console.error),n}),t.updateAllBalanceActionStatuses=(async(e,n)=>{const a=new Map;return n||(n=await m.fetchBalanceActions(e)),await Promise.all(n.map(async n=>{if(n.status===s.TransactionStatus.Pending){const r=await t.updateBalanceActionStatus(e,n.txHash);r!==n.status&&a.set(n.txHash,r)}})),a}),t.onTxHash=(e=>new Promise((t,n)=>{e.once("transactionHash",n=>t({txHash:n,promiEvent:e})).catch(n)})),t.deposit=(async(e,n,a)=>{n=new r.default(n);const c=await l.balances(e,[a]).then(e=>e.get(a));if(c&&n.gt(c.nondeposited))throw new Error(u.ErrInsufficientBalance);const m=e.getAddress(),y=await l.getTokenDetails(e,a),f=await p.getGasPrice(e),h=new o.BN(d.toSmallestUnit(n,y).toFixed()),w={action:s.BalanceActionType.Deposit,amount:n,time:Math.floor((new Date).getTime()/1e3),status:s.TransactionStatus.Pending,token:a,trader:m,txHash:"",nonce:void 0};try{if((e=>{return e.address.toLowerCase()==="0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE".toLowerCase()})(y)){const{txHash:n,promiEvent:a}=await t.onTxHash(e._contracts.renExBalances.deposit(y.address,h,{value:h.toString(),from:m,gasPrice:f}));try{w.nonce=await e.getWeb3().eth.getTransactionCount(m,"pending")-1}catch(e){console.error(e)}return w.txHash=n,e._storage.setBalanceAction(w).catch(console.error),{balanceAction:w,promiEvent:a}}{let n=e._contracts.erc20.get(a);void 0===n&&(n=new(i.withProvider(e.getWeb3().currentProvider,i.ERC20))(y.address),e._contracts.erc20.set(a,n)),new o.BN(await n.allowance(m,e._contracts.renExBalances.address,{from:m,gasPrice:f})).lt(h)&&await t.onTxHash(n.approve(e._contracts.renExBalances.address,h,{from:m,gasPrice:f}));const{txHash:r,promiEvent:u}=await t.onTxHash(e._contracts.renExBalances.deposit(y.address,h,{gas:a===s.Token.DGX?5e5:15e4,gasPrice:f,from:m}));w.txHash=r;try{w.nonce=await e.getWeb3().eth.getTransactionCount(m,"pending")-1}catch(e){console.error(e)}return e._storage.setBalanceAction(w).catch(console.error),{balanceAction:w,promiEvent:u}}}catch(t){if(t.tx)return w.txHash=t.tx,e._storage.setBalanceAction(w).catch(console.error),{balanceAction:w,promiEvent:null};if(t.message.match("Insufficient funds"))throw new Error(u.ErrInsufficientFunds);if(t.message.match("User denied transaction signature"))throw new Error(u.ErrCanceledByUser);throw t}}),t.withdraw=(async(e,n,a,i)=>{if(n=new r.default(n),!0===i)throw new Error(u.ErrUnimplemented);const m=await l.balances(e,[a]).then(e=>e.get(a));if(m&&n.gt(m.free))throw new Error(u.ErrInsufficientBalance);const y=e.getAddress(),f=await l.getTokenDetails(e,a),h=await p.getGasPrice(e),w=new o.BN(d.toSmallestUnit(n,f).toFixed()),b={action:s.BalanceActionType.Withdraw,amount:n,time:Math.floor((new Date).getTime()/1e3),status:s.TransactionStatus.Pending,token:a,trader:y,txHash:"",nonce:void 0};try{const n=await c.requestWithdrawalSignature(e._networkData.ingress,y,a),{txHash:r,promiEvent:o}=await t.onTxHash(e._contracts.renExBalances.withdraw(f.address,w,n.toHex(),{from:y,gasPrice:h}));b.txHash=r;try{b.nonce=await e.getWeb3().eth.getTransactionCount(y,"pending")-1}catch(e){console.error(e)}return e._storage.setBalanceAction(b).catch(console.error),{balanceAction:b,promiEvent:o}}catch(t){if(t.tx)return b.txHash=t.tx,e._storage.setBalanceAction(b).catch(console.error),{balanceAction:b,promiEvent:null};if(t.message.match("Insufficient funds"))throw new Error(u.ErrInsufficientFunds);if(t.message.match("User denied transaction signature"))throw new Error(u.ErrCanceledByUser);throw t}})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(17)),o=a(n(0)),s=n(12),i=n(8),u=n(3),c=n(1),d=n(5);t.transfer=(async(e,n,a,r)=>{const s=await t.getGasPrice(e),l=await d.getTokenDetails(e,a),p=u.toSmallestUnit(new o.default(r),l).toString();if(a===c.Token.ETH)e.getWeb3().eth.sendTransaction({from:e.getAddress(),to:n,value:p,gasPrice:s});else{let t=e._contracts.erc20.get(a);t||(t=new(i.withProvider(e.getWeb3().currentProvider,i.ERC20))(l.address),e._contracts.erc20.set(a,t)),await t.transfer(n,p)}}),t.getGasPrice=(async e=>{try{const t=await r.default.get("https://ethgasstation.info/json/ethgasAPI.json");if(t.data.fast){const e=t.data.fast*Math.pow(10,8);return e>6e10?6e10:e}throw new Error("cannot retrieve gas price from ethgasstation")}catch(t){try{return 1.1*await e.getWeb3().eth.getGasPrice()}catch(e){return}}}),t.getTransactionStatus=(async(e,t)=>{let n=await e.getWeb3().eth.getTransactionReceipt(t);if(!n){const a=await e.getWeb3().eth.getTransactionCount(e.getAddress());let r;try{r=await e._storage.getBalanceAction(t)}catch(e){return s.TransactionStatus.Pending}if(void 0===r||void 0===r.nonce)return s.TransactionStatus.Pending;if(!(a>r.nonce))return s.TransactionStatus.Pending;if(!(n=await e.getWeb3().eth.getTransactionReceipt(t)))return s.TransactionStatus.Replaced}if(!n.blockHash)return s.TransactionStatus.Pending;const a=n.status;return"0"===a||0===a||!1===a?s.TransactionStatus.Failed:s.TransactionStatus.Done})},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=n(0),o=n(2),s=a(n(9)),i=n(21),u=n(29),c=n(11),d=n(4),l=n(19),p=n(1),m=n(20),y=n(22),f=n(5),h=n(23),w=n(32),b=n(6);t.getMinEthTradeVolume=(async e=>Promise.resolve(new r.BigNumber(1)));const g=(e,t)=>u.normalizeVolume(e.dividedBy(t),!0);t.openOrder=(async(e,n,a=p.NullConsole)=>{const c=l.MarketPairs.get(n.symbol);if(!c)throw new Error(`Unsupported market pair: ${n.symbol}`);const b=await t.getMinEthTradeVolume(e),v=Math.floor((new Date).getTime()/1e3);let E=((e,t,n,a,o)=>{const s=new r.BigNumber(t.price),i=o.base===p.Token.ETH?a:g(a,s);return{symbol:t.symbol,side:t.side,price:s,volume:new r.BigNumber(t.volume),minVolume:t.minVolume?new r.BigNumber(t.minVolume):i,expiry:void 0!==t.expiry?t.expiry:n+86400,type:void 0!==t.type?t.type:p.OrderType.LIMIT}})(0,n,v,b,c);const k=c.base,_=c.quote,O=await f.getTokenDetails(e,k);if(!((e,t)=>{const n=e.volume.eq(new r.BigNumber(e.volume.toFixed(t))),a=e.minVolume.eq(new r.BigNumber(e.minVolume.toFixed(t)));return n&&a})(E,O.decimals))throw new Error(`Order volumes are invalid. ${k} is limited to ${O.decimals} decimal places.`);if(!(e=>{const t=e.price.eq(u.normalizePrice(e.price,e.side===p.OrderSide.SELL)),n=e.volume.eq(u.normalizeVolume(e.volume)),a=e.minVolume.eq(u.normalizeVolume(e.minVolume));return t&&n&&a})(E)){if(!e.getConfig().autoNormalizeOrders)throw new Error("Order inputs have not been normalized.");E=(e=>{const t=Object.assign(e,{});return t.price=u.normalizePrice(e.price,e.side===p.OrderSide.SELL),t.volume=u.normalizeVolume(e.volume),t.minVolume=u.normalizeVolume(e.minVolume),t})(E)}const T=c.orderSettlement,x=E.volume.times(E.price),M=E.side===p.OrderSide.BUY?_:k,S=E.side===p.OrderSide.BUY?k:_,B=E.side===p.OrderSide.BUY?E.volume:x,D=E.side===p.OrderSide.BUY?x:E.volume,A=await w.darknodeFees(e);let N=S,P=x.times(A);T===p.OrderSettlement.RenExAtomic&&k===p.Token.ETH&&(N=p.Token.ETH,P=E.volume.times(A));const I=await f.balances(e,[M,N]);let R=new r.BigNumber(0);if(a.log("Verifying trader balance"),T===p.OrderSettlement.RenEx){const e=I.get(M);e&&(R=e.free)}else try{const t=await m.atomicBalances(e,[M]).then(e=>e.get(M));t&&(R=t.free)}catch(e){throw a.error(e.message||e),e}if(D.gt(R))throw a.error(d.ErrInsufficientBalance),new Error(d.ErrInsufficientBalance);if(E.price.lte(new r.BigNumber(0)))throw a.error("Invalid price"),new Error("Invalid price");if(E.volume.lte(new r.BigNumber(0)))throw a.error("Invalid volume"),new Error("Invalid volume");if(E.minVolume.lt(new r.BigNumber(0)))throw a.error("Invalid minimum volume"),new Error("Invalid minimum volume");const C=k===p.Token.ETH?b:g(b,E.price);if(E.volume.lt(C)){let e=`Volume must be at least ${C} ${k}`;throw k!==p.Token.ETH&&(e+=` or ${b} ${p.Token.ETH}`),a.error(e),new Error(e)}if(E.minVolume.lt(C)){let e=`Minimum volume must be at least ${C} ${k}`;throw k!==p.Token.ETH&&(e+=` or ${b} ${p.Token.ETH}`),a.error(e),new Error(e)}if(E.volume.lt(E.minVolume)){const e=`Volume must be greater or equal to minimum volume: (${E.minVolume})`;throw a.error(e),new Error(e)}if(T===p.OrderSettlement.RenExAtomic){const e=I.get(N);if(e&&P.gt(e.free))throw a.error("Insufficient balance for fees"),new Error("Insufficient balance for fees")}const j=s.randomNonce(()=>new o.BN(e.getWeb3().utils.randomHex(8).slice(2),"hex"));let L=s.createOrder(E,j);const H=s.getOrderID(e.getWeb3(),L);if(L=L.set("id",H.toBase64()),T===p.OrderSettlement.RenExAtomic){a.log("Submitting order to Atomic Swapper");try{await i.submitOrderToAtom(H)}catch(e){throw a.error(e.message||e),new Error("Error sending order to Atomic Swapper")}}let F;a.log("Building order mapping");try{F=await s.buildOrderMapping(e.getWeb3(),e._contracts.darknodeRegistry,L,a)}catch(e){throw a.error(e.message||e),e}const U=new s.OpenOrderRequest({address:e.getAddress().slice(2),orderFragmentMappings:[F]});let V;a.log("Sending order fragments");try{V=await s.submitOrderFragments(e._networkData.ingress,U)}catch(e){throw a.error(e.message||e),e}a.log("Waiting for transaction signature");const z=await h.getGasPrice(e);let $,G;try{({txHash:$,promiEvent:G}=await y.onTxHash(e._contracts.orderbook.openOrder(1,V.toString(),H.toHex(),{from:e.getAddress(),gasPrice:z})))}catch(e){throw a.error(e.message||e),e}a.log("Order submitted.");const q={orderInputs:E,status:p.OrderStatus.NOT_SUBMITTED,trader:e.getAddress(),id:H.toBase64(),transactionHash:$,computedOrderDetails:{spendToken:M,receiveToken:S,spendVolume:D,receiveVolume:B,date:v,feeAmount:P,feeToken:N,orderSettlement:T,nonce:j}};return e._storage.setOrder(q).catch(console.error),{traderOrder:q,promiEvent:G}}),t.cancelOrder=(async(e,t)=>{const n=new c.EncodedData(t,c.Encodings.BASE64).toHex(),a=await h.getGasPrice(e);return{promiEvent:e._contracts.orderbook.cancelOrder(n,{from:e.getAddress(),gasPrice:a})}}),t.getOrders=(async(e,t)=>{const n=[p.OrderStatus.NOT_SUBMITTED,p.OrderStatus.OPEN,p.OrderStatus.CONFIRMED];if(t.status&&!n.includes(t.status))throw new Error(d.ErrUnsupportedFilterStatus);let a=await s.getOrders(e._contracts.orderbook,t.start,t.limit);t.status&&(a=a.filter(e=>e[1]===t.status).toList());const r=t.address;return r&&(a=a.filter(e=>e[2].toLowerCase()===r.toLowerCase()).toList()),a.map(e=>({id:e[0],status:e[1],trader:e[2]})).toArray()}),t.updateAllOrderStatuses=(async(e,t)=>{const n=new Map;return t||(t=await b.fetchTraderOrders(e)),await Promise.all(t.map(async t=>{if(t.status===p.OrderStatus.NOT_SUBMITTED||t.status===p.OrderStatus.OPEN){const a=await w.status(e,t.id);a!==t.status&&n.set(t.id,a)}})),n}),t.getOrderBlockNumber=(async(e,t)=>{const n=new c.EncodedData(t,c.Encodings.BASE64).toHex();return new o.BN(await e._contracts.orderbook.orderBlockNumber(n)).toNumber()})},function(e,t){e.exports=require("web3-core-promievent")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("util")},function(e,t,n){const a=n(0),r=n(26),o=function(e,t){const n=`Attempting to convert to unknown number format: ${t}`;switch(t){case"BigNumber":return new a(e);case"BN":return r.toBN(e);case"String":return e;default:throw new Error(n)}},s=function(e,t){return e.map(e=>o(e,t))};e.exports={numbers:function(e,t){const n=this.numberFormat;return t.forEach((t,a)=>{t.type.includes("int")&&(t.type.includes("[")?Array.isArray(e)?e=s(e,n):(t.name.length&&(e[t.name]=s(e[t.name],n)),e[a]=s(e[a],n)):"object"==typeof e?(t.name.length&&(e[t.name]=o(e[t.name],n)),e[a]=o(e[a],n)):e=o(e,n))}),e}}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(9);function s(e,t){return u(1e12,26,.005,e,1999,t)}function i(e,t){return u(1e12,0,.2,e,49,t)}function u(e,t,n,a,s,i){const u=a.times(e),d=1-Math.floor(Math.log10(n)),l=n*10**(d-1);let p,[m,y]=c(u,d,!1,i);for(m=i?(m+(l-m%l)%l)/n:(m-m%l)/n,[m,p]=c(new r.default(m),d,!1,i),y+=p;m>s;)m/=10,y++;const f=t+y;return new o.Tuple({c:m,q:f})}function c(e,t,n=!1,a){if(e.isEqualTo(0))return[0,0];let o=Math.floor(Math.log10(e.toNumber()))-(t-1);const s=new r.default(10).exponentiatedBy(new r.default(o).toNumber());let i;if(i=a?Math.ceil(e.div(s.toNumber()).toNumber()):Math.floor(e.div(s.toNumber()).toNumber()),n)for(;i%10==0&&0!==i;)i/=10,o++;return[i,o]}t.priceToTuple=s,t.tupleToPrice=(e=>{const t=new r.default(10).pow(e.q-26-12-3);return new r.default(e.c).times(5).times(t)}),t.normalizePrice=((e,n)=>t.tupleToPrice(s(e,n))),t.volumeToTuple=i,t.tupleToVolume=(e=>{const t=new r.default(10).pow(e.q-12);return new r.default(e.c).times(.2).times(t)}),t.normalizeVolume=((e,n)=>t.tupleToVolume(i(e,n))),t.toOriginalType=function(e,t){if(r.default.isBigNumber(t))return e;switch(typeof t){case"number":return e.toNumber();case"string":return e.toFixed();default:throw new Error(`Could not convert ${typeof t} to original type`)}}},function(e,t){e.exports=require("crypto")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(12),s=n(4),i=n(18);class u extends(i.Record({co:0,exp:0})){}function c(e){if(e.gte(10)){const t=c(e.div(10));return new u({co:t.co,exp:t.exp+1})}if(e.gte(1)){const t=e.div(.005).integerValue(r.default.ROUND_FLOOR);return new u({co:t.toNumber(),exp:38})}if(e.gt(0)){const t=c(e.times(10));return new u({co:t.co,exp:t.exp-1})}return new u({co:0,exp:0})}function d(e){if(e.gte(10)){const t=d(e.div(10));return new u({co:t.co,exp:t.exp+1})}if(e.gte(1)){const t=e.div(.2).integerValue(r.default.ROUND_FLOOR);return new u({co:t.toNumber(),exp:12})}if(e.gt(0)){const t=d(e.times(10));return new u({co:t.co,exp:t.exp-1})}return new u({co:0,exp:0})}t.CoExp=u,t.priceToCoExp=function(e){return c(new r.default(e.toString()).div(new r.default("1e12")))},t.volumeToCoExp=function(e){return d(new r.default(e.toString()).div(new r.default("1e12")))},t.priceFloatToCoExp=c,t.volumeFloatToCoExp=d,t.orderbookStateToOrderStatus=function(e){switch(e){case 0:return o.OrderStatus.NOT_SUBMITTED;case 1:return o.OrderStatus.OPEN;case 2:return o.OrderStatus.CONFIRMED;case 3:return o.OrderStatus.CANCELED;default:throw new Error(`${s.ErrUnknownOrderStatus}: ${e}`)}},t.settlementStatusToOrderStatus=function(e){switch(e){case 0:case 1:return o.OrderStatus.CONFIRMED;case 2:return o.OrderStatus.SETTLED;case 3:return o.OrderStatus.SLASHED;default:throw new Error(`${s.ErrUnknownOrderStatus}: ${e}`)}}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(21),i=n(11),u=n(31),c=n(3),d=n(1),l=n(20),p=n(24);t.status=(async(e,n)=>{const a=new i.EncodedData(n,i.Encodings.BASE64);let r,c;try{c=u.orderbookStateToOrderStatus(new o.BN(await e._contracts.orderbook.orderState(a.toHex())).toNumber())}catch(e){throw console.error("Unable to call orderState in status"),e}if(c===d.OrderStatus.CONFIRMED){r=await(async(e,n)=>{try{await t.matchDetails(e,n.toBase64())}catch(e){return d.OrderStatus.CONFIRMED}const a=await e._storage.getOrder(n.toBase64());if(!a||a.computedOrderDetails.orderSettlement===d.OrderSettlement.RenEx)return d.OrderStatus.SETTLED;const r=a.status?a.status:d.OrderStatus.CONFIRMED;if(!l.atomConnected(e))return r;try{let e=await s.getOrderStatus(n);return e!==d.OrderStatus.OPEN&&e!==d.OrderStatus.NOT_SUBMITTED||(e=d.OrderStatus.CONFIRMED),e}catch(e){return r}})(e,a);const o=await e._storage.getOrder(n);if(o&&o.computedOrderDetails.orderSettlement===d.OrderSettlement.RenEx&&r===d.OrderStatus.CONFIRMED){let t=0;try{t=await e.getWeb3().eth.getBlockNumber()}catch(e){console.error(e)}if(t>0){let a=0;try{a=await p.getOrderBlockNumber(e,n)}catch(e){console.error(e)}a>0&&t-a>300&&(r=d.OrderStatus.FAILED_TO_SETTLE)}}}else if(c===d.OrderStatus.OPEN){const t=await e._storage.getOrder(n);r=t&&t.orderInputs.expiry<Date.now()/1e3?d.OrderStatus.EXPIRED:c}else r=c;return e._storage.getOrder(n).then(async t=>{t&&(t.status=r,await e._storage.setOrder(t))}).catch(console.error),r}),t.darknodeFees=(async e=>{const t=new r.default(await e._contracts.renExSettlement.DARKNODE_FEES_NUMERATOR()),n=new r.default(await e._contracts.renExSettlement.DARKNODE_FEES_DENOMINATOR());return t.dividedBy(n)}),t.matchDetails=(async(e,t)=>{const n=await e._storage.getOrder(t);if(n&&n.matchDetails)return n.matchDetails;const a=new i.EncodedData(t,i.Encodings.BASE64),s=await e._contracts.renExSettlement.getMatchDetails(a.toHex()),u=new i.EncodedData(s.matchedID,i.Encodings.HEX);if(!s.settled)throw new Error("Not settled");const l=s.orderIsBuy?{orderID:t,matchedID:u.toBase64(),receivedToken:c.idToToken(new o.BN(s.secondaryToken).toNumber()),receivedVolume:new r.default(s.secondaryVolume),fee:new r.default(s.priorityFee),spentToken:c.idToToken(new o.BN(s.priorityToken).toNumber()),spentVolume:new r.default(s.priorityVolume)}:{orderID:t,matchedID:u.toBase64(),receivedToken:c.idToToken(new o.BN(s.priorityToken).toNumber()),receivedVolume:new r.default(s.priorityVolume),fee:new r.default(s.secondaryFee),spentToken:c.idToToken(new o.BN(s.secondaryToken).toNumber()),spentVolume:new r.default(s.secondaryVolume)};if(n&&n.computedOrderDetails.orderSettlement===d.OrderSettlement.RenExAtomic){const[e,t]=s.orderIsBuy?[new r.default(s.secondaryVolume).plus(new r.default(s.secondaryFee)),new r.default(s.priorityVolume).plus(new r.default(s.priorityFee))]:[new r.default(s.priorityVolume).plus(new r.default(s.priorityFee)),new r.default(s.secondaryVolume).plus(new r.default(s.secondaryFee))];l.receivedVolume=e,l.spentVolume=t,l.fee=new r.default(0)}return e._storage.getOrder(t).then(async t=>{t&&(t.matchDetails=l,await e._storage.setOrder(t))}).catch(console.error),l})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(34)),o=n(35),s=(e,t)=>`renex_sdk_${e}_${t.toLowerCase()}`;t.default=class{constructor(e){const t=e||"default";this.orders=r.default.createInstance({name:"orders",storeName:s("orders",t),driver:[r.default.INDEXEDDB,r.default.WEBSQL,r.default.LOCALSTORAGE]}),this.balanceActions=r.default.createInstance({name:"deposits",storeName:s("deposits",t),driver:[r.default.INDEXEDDB,r.default.WEBSQL,r.default.LOCALSTORAGE]})}async setOrder(e){await this.orders.setItem(e.id,o.serializeTraderOrder(e))}async getOrder(e){const t=await this.orders.getItem(e);if(t)return o.deserializeTraderOrder(t)}async getOrders(){const e=[];return await this.orders.iterate(t=>{try{e.push(o.deserializeTraderOrder(t))}catch(e){console.error(e)}}),e}async setBalanceAction(e){await this.balanceActions.setItem(e.txHash,o.serializeBalanceAction(e))}async getBalanceAction(e){const t=await this.balanceActions.getItem(e);if(t)return o.deserializeBalanceAction(t)}async getBalanceActions(){const e=[];return await this.balanceActions.iterate(t=>{try{e.push(o.deserializeBalanceAction(t))}catch(e){console.error(e)}}),e}}},function(e,t){e.exports=require("localforage")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2);t.serializeTraderOrder=(e=>JSON.stringify(e)),t.deserializeTraderOrder=(e=>{const t=JSON.parse(e);return t.matchDetails&&(t.matchDetails.fee=new r.default(t.matchDetails.fee),t.matchDetails.receivedVolume=new r.default(t.matchDetails.receivedVolume),t.matchDetails.spentVolume=new r.default(t.matchDetails.spentVolume)),t.computedOrderDetails.receiveVolume=new r.default(t.computedOrderDetails.receiveVolume),t.computedOrderDetails.spendVolume=new r.default(t.computedOrderDetails.spendVolume),t.computedOrderDetails.feeAmount=new r.default(t.computedOrderDetails.feeAmount),t.computedOrderDetails.nonce=new o.BN(t.computedOrderDetails.nonce,"hex"),t.orderInputs.minVolume=new r.default(t.orderInputs.minVolume),t.orderInputs.price=new r.default(t.orderInputs.price),t.orderInputs.volume=new r.default(t.orderInputs.volume),t}),t.serializeBalanceAction=(e=>JSON.stringify(e)),t.deserializeBalanceAction=(e=>{const t=JSON.parse(e);return t.amount=new r.default(t.amount),t})},function(e,t,n){var a=n(37),r=n(38),o=function(e){var t=a.normalize(e||{});return r.clone(t)};e.exports=o,"undefined"!=typeof window&&(window.TruffleContract=o)},function(e,t){e.exports=require("truffle-contract-schema")},function(e,t,n){(function(e){var t=n(40),a=n(7),r=n(25),o=n(26),s=(n(13),n(14)),i=n(43);n(16);"object"==typeof a&&0==Object.keys(a).length&&(a=global.Web3);!function(e){function n(e){var t=this,n=t.constructor;if("string"==typeof e){var a=new n.web3.eth.Contract(n.abi);a.options.address=e,e=a}t.methods={},t.abi=n.abi,t.address=e.options.address,t.transactionHash=e.transactionHash,t.contract=e,t.abi.forEach(function(a){switch(a.type){case"function":var r=["pure","view"].includes(a.stateMutability)||a.constant,s=o._jsonInterfaceMethodToString(a),u=function(e,r){var o;return(o=e?i.call.call(n,r,a,t.address):i.send.call(n,r,t.address)).call=i.call.call(n,r,a,t.address),o.sendTransaction=i.send.call(n,r,t.address),o.estimateGas=i.estimate.call(n,r,t.address),o.request=i.request.call(n,r,t.address),o};void 0===t[a.name]&&(t[a.name]=u(r,e.methods[a.name])),t.methods[s]=u(r,e.methods[s]);break;case"event":t[a.name]=i.event.call(n,e.events[a.name])}}),t.sendTransaction=i.send.call(n,null,t.address),t.send||(t.send=((e,n={})=>{const a=Object.assign({value:e},n);return t.sendTransaction(a)})),t.allEvents=i.allEvents.call(n,e),t.getPastEvents=i.getPastEvents.call(n,e)}function u(e){return Object.keys(e._constructorMethods).forEach(function(t){e[t]=e._constructorMethods[t].bind(e)}),Object.keys(e._properties).forEach(function(t){e.addProp(t,e._properties[t])}),e.new.estimateGas=i.estimateDeployment.bind(e),e}n._constructorMethods={setProvider:function(e){if(!e)throw new Error("Invalid provider passed to setProvider(); provider is "+e);this.web3.setProvider(e),this.currentProvider=e},new:function(){var e=this,t=new r;if(!e.currentProvider){var n=e.contractName+" error: Please call setProvider() first before calling new().";throw new Error(n)}if(!e.bytecode){n=e.contractName+" error: contract binary not set. Can't deploy new instance.";throw new Error(n)}var a=Array.prototype.slice.call(arguments),o={contract:e,promiEvent:t,onlyEmitReceipt:!0};return e.detectNetwork().then(t=>(s.checkLibraries.apply(e),i.deploy.call(e,a,o,t.blockLimit))).catch(t.reject),t.eventEmitter},at:function(e){var t=this;return new Promise(function(n,a){if(null==e||"string"!=typeof e||42!=e.length){var r="Invalid address passed to "+t.contractName+".at(): "+e;a(new Error(r))}return t.detectNetwork().then(function(r){var o=new t(e);return t.web3.eth.getCode(e).then(function(r){if(!r||""===r.replace("0x","").replace(/0/g,"")){var s="Cannot create instance of "+t.contractName+"; no code at address "+e;a(new Error(s))}n(o)})})})},deployed:function(){var e=this;return e.detectNetwork().then(function(){if(null==e._json.networks[e.network_id]){var t=e.contractName+" has not been deployed to detected network (network/artifact mismatch)";throw new Error(t)}if(!e.isDeployed()){t=e.contractName+" has not been deployed to detected network ("+e.network_id+")";throw new Error(t)}return new e(e.address)})},defaults:function(e){null==this.class_defaults&&(this.class_defaults={}),null==e&&(e={});var t=this;return Object.keys(e).forEach(function(n){var a=e[n];t.class_defaults[n]=a}),this.class_defaults},hasNetwork:function(e){return null!=this._json.networks[e+""]},isDeployed:function(){return null!=this.network_id&&(null!=this._json.networks[this.network_id]&&!!this.network.address)},detectNetwork:function(){var e=this;return new Promise(function(n,a){e.web3.eth.getBlock("latest").then(function(r){const o=r&&r.gasLimit?r.gasLimit:7e6;if(e.network_id&&null!=e.networks[e.network_id])return n({id:e.network_id,blockLimit:o});e.web3.eth.net.getId().then(function(r){if(e.hasNetwork(r))return e.setNetwork(r),n({id:e.network_id,blockLimit:o});var i=Object.keys(e._json.networks).filter(function(e){return 0==e.indexOf("blockchain://")}),u=i.map(function(n){return t.matches.bind(t,n,e.web3.currentProvider)});s.parallel(u,function(t,s){if(t)return a(t);for(var u=0;u<s.length;u++)if(s[u])return e.setNetwork(i[u]),n({id:e.network_id,blockLimit:o});return e.setNetwork(r),n({id:e.network_id,blockLimit:o})})}).catch(a)}).catch(a)})},setNetwork:function(e){e&&(this.network_id=e+"")},setWallet:function(e){this.web3.eth.accounts.wallet=e},resetAddress:function(){delete this.network.address},link:function(e,t){var n=this;if("function"==typeof e){var a=e;if(0==a.isDeployed())throw new Error("Cannot link contract without an address.");return this.link(a.contractName,a.address),void Object.keys(a.events).forEach(function(e){n.network.events[e]=a.events[e]})}if("object"!=typeof e)null==this._json.networks[this.network_id]&&(this._json.networks[this.network_id]={events:{},links:{}}),this.network.links[e]=t;else{var r=e;Object.keys(r).forEach(function(e){var t=r[e];n.link(e,t)})}},clone:function(e){e=e||{};var t,r=function(){return this.constructor=r,n.apply(this,arguments)};return r.prototype=Object.create(this.prototype),"object"!=typeof e&&(t=e,e=this._json),e=s.merge({},this._json||{},e),r._constructorMethods=this._constructorMethods,r._properties=this._properties,r._property_values={},r._json=e,u(r),r.web3=new a,r.class_defaults=r.prototype.defaults||{},t&&r.setNetwork(t),Object.keys(e).forEach(function(t){0==t.indexOf("x-")&&(r[t]=e[t])}),r},addProp:function(e,t){var n=this,a={enumerable:!1,configurable:!1,get:function(){return null!=t.get?t.get.call(n):n._property_values[e]||t.call(n)},set:function(a){if(null==t.set)throw new Error(e+" property is immutable");t.set.call(n,a)}};Object.defineProperty(this,e,a)},toJSON:function(){return this._json}},n._properties={contract_name:{get:function(){return this.contractName},set:function(e){this.contractName=e}},contractName:{get:function(){return this._json.contractName||"Contract"},set:function(e){this._json.contractName=e}},gasMultiplier:{get:function(){return void 0===this._json.gasMultiplier&&(this._json.gasMultiplier=1.25),this._json.gasMultiplier},set:function(e){this._json.gasMultiplier=e}},timeoutBlocks:{get:function(){return this._json.timeoutBlocks},set:function(e){this._json.timeoutBlocks=e}},autoGas:{get:function(){return void 0===this._json.autoGas&&(this._json.autoGas=!0),this._json.autoGas},set:function(e){this._json.autoGas=e}},numberFormat:{get:function(){return void 0===this._json.numberFormat&&(this._json.numberFormat="BN"),this._json.numberFormat},set:function(e){const t=["BigNumber","BN","String"],n=`Invalid number format setting: "${e}": `+`valid formats are: ${JSON.stringify(t)}.`;if(!t.includes(e))throw new Error(n);this._json.numberFormat=e}},abi:{get:function(){return this._json.abi},set:function(e){this._json.abi=e}},network:function(){var e=this.network_id;if(null==e){var t=this.contractName+" has no network id set, cannot lookup artifact data. Either set the network manually using "+this.contractName+".setNetwork(), run "+this.contractName+".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.";throw new Error(t)}if(null==this._json.networks[e]){t=this.contractName+" has no network configuration for its current network id ("+e+").";throw new Error(t)}var n=this._json.networks[e];return null==n.links&&(n.links={}),null==n.events&&(n.events={}),n},networks:function(){return this._json.networks},address:{get:function(){var e=this.network.address;if(null==e){var t="Cannot find deployed address: "+this.contractName+" not deployed or address not set.";throw new Error(t)}return e},set:function(e){if(null==e)throw new Error("Cannot set deployed address; malformed value: "+e);var t=this.network_id;if(null==t){var n=this.contractName+" has no network id set, cannot lookup artifact data. Either set the network manually using "+this.contractName+".setNetwork(), run "+this.contractName+".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.";throw new Error(n)}null==this._json.networks[t]&&(this._json.networks[t]={events:{},links:{}}),this.network.address=e}},transactionHash:{get:function(){return this.network.transactionHash},set:function(e){this.network.transactionHash=e}},links:function(){if(!this.network_id){var e=this.contractName+" has no network id set, cannot lookup artifact data. Either set the network manually using "+this.contractName+".setNetwork(), run "+this.contractName+".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.";throw new Error(e)}return null==this._json.networks[this.network_id]?{}:this.network.links||{}},events:function(){var e,t=new a;return e=null==this._json.networks[this.network_id]?{}:this.network.events||{},this.abi.forEach(function(n){if("event"==n.type){var a=n.name+"(";n.inputs.forEach(function(e,t){a+=e.type,t<n.inputs.length-1&&(a+=",")}),a+=")";var r=t.utils.keccak256(a);e[r]=n}}),e},binary:function(){return s.linkBytecode(this.bytecode,this.links)},deployedBinary:function(){return s.linkBytecode(this.deployedBytecode,this.links)},unlinked_binary:{get:function(){return this.bytecode},set:function(e){this.bytecode=e}},bytecode:{get:function(){return this._json.bytecode},set:function(e){this._json.bytecode=e}},deployedBytecode:{get:function(){var e=this._json.deployedBytecode;return 0!=e.indexOf("0x")&&(e="0x"+e),e},set:function(e){var t=e;0!=e.indexOf("0x")&&(t="0x"+t),this._json.deployedBytecode=t}},sourceMap:{get:function(){return this._json.sourceMap},set:function(e){this._json.sourceMap=e}},deployedSourceMap:{get:function(){return this._json.deployedSourceMap},set:function(e){this._json.deployedSourceMap=e}},source:{get:function(){return this._json.source},set:function(e){this._json.source=e}},sourcePath:{get:function(){return this._json.sourcePath},set:function(e){this._json.sourcePath=e}},legacyAST:{get:function(){return this._json.legacyAST},set:function(e){this._json.legacyAST=e}},ast:{get:function(){return this._json.ast},set:function(e){this._json.ast=e}},compiler:{get:function(){return this._json.compiler},set:function(e){this._json.compiler=e}},schema_version:function(){return this.schemaVersion},schemaVersion:function(){return this._json.schemaVersion},updated_at:function(){return this.updatedAt},updatedAt:function(){try{return this.network.updatedAt||this._json.updatedAt}catch(e){return this._json.updatedAt}}},u(n),e.exports=n}(e||{})}).call(this,n(39)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){e.exports=require("truffle-blockchain-utils")},function(e,t){e.exports=require("truffle-error")},function(e,t){e.exports=require("web3-eth-abi")},function(e,t,n){var a=n(25),r=n(44),o=n(14),s=n(13),i=n(15),u=n(16),c=n(45),d=n(28),l=(n(27),{getGasEstimate:function(e,t){var n=this,a=this.web3;return new Promise(function(r,o){return e.gas?r(e.gas):n.autoGas?void a.eth.estimateGas(e).then(e=>{var a=Math.floor(n.gasMultiplier*e);r(a>=t?t-1:a)}).catch(e=>r()):r()})},prepareCall:function(e,t){var n=Array.prototype.slice.call(t),a=o.getTxParams.call(e,n);return e.detectNetwork().then(()=>({args:n,params:a}))},hasTxParams:function(e){return o.is_object(e)&&!o.is_big_number(e)},hasDefaultBlock:function(e,t,n){var a=!l.hasTxParams(t)&&e.length>n.length,r=l.hasTxParams(t)&&e.length-1>n.length;return a||r},call:function(e,t,n){var a=this;return function(){var r={},s="latest",i=Array.prototype.slice.call(arguments),u=i[i.length-1];return l.hasDefaultBlock(i,u,t.inputs)&&(s=i.pop()),l.hasTxParams(u)&&(r=i.pop()),r.to=n,r=o.merge(a.class_defaults,r),new Promise(async(n,o)=>{let u;try{await a.detectNetwork(),u=await e(...i).call(r,s),n(u=d.numbers.call(a,u,t.outputs))}catch(e){o(e)}})}},send:function(e,t){var n=this,r=n.web3;return function(){var s,i=Array.prototype.slice.call(arguments),d=o.getTxParams.call(n,i),p=new a,m={contract:n,promiEvent:p,params:d};return n.detectNetwork().then(a=>{d.to=t,d.data=e?e(...i).encodeABI():void 0,l.getGasEstimate.call(n,d,a.blockLimit).then(e=>{d.gas=e,(s=r.eth.sendTransaction(d)).catch(c.start.bind(n,m)),u.setup(s,m)}).catch(p.reject)}).catch(p.reject),p.eventEmitter}},deploy:function(e,t,n){var a,r=this,d=r.abi,p=r.web3,m=o.getTxParams.call(r,e),y={data:r.binary,arguments:e},f=new p.eth.Contract(d);m.data=f.deploy(y).encodeABI(),l.getGasEstimate.call(r,m,n).then(e=>{m.gas=e,t.params=m,a=p.eth.sendTransaction(m),u.setup(a,t),a.then(async e=>{if(!e.status){var n=await i.get(m,p),a=new s(m,t.transactionHash,e,n);return t.promiEvent.reject(a)}var o=new p.eth.Contract(d,e.contractAddress);o.transactionHash=t.transactionHash,t.promiEvent.resolve(new r(o))}).catch(c.start.bind(r,t))}).catch(t.promiEvent.reject)},event:function(e){var t=this,n=o.decodeLogs,a=null;function s(e){return e!==a&&(a=e)}return function(a,o){if("function"==typeof a&&(o=a,a={}),void 0!==o){var i=function(e,a){e&&o(e);var r=s(a.id)&&n.call(t,a,!0)[0];o(null,r)};return t.detectNetwork().then(()=>e.call(t.events,a,i))}var u=new r;return t.detectNetwork().then(()=>{var r=e(a);r.on("data",e=>s(e.id)&&u.emit("data",n.call(t,e,!0)[0])),r.on("changed",e=>s(e.id)&&u.emit("changed",n.call(t,e,!0)[0])),r.on("error",e=>u.emit("error",e))}),u}},allEvents:function(e){var t=this,n=o.decodeLogs,a=null;function s(e){return e!==a&&(a=e)}return function(a){var o=new r;return t.detectNetwork().then(()=>{var r=e.events.allEvents(a);r.on("data",e=>s(e.id)&&o.emit("data",n.call(t,e,!0)[0])),r.on("changed",e=>s(e.id)&&o.emit("changed",n.call(t,e,!0)[0])),r.on("error",e=>o.emit("error",e))}),o}},getPastEvents:function(e){var t=this,n=o.decodeLogs;return function(a,r){return e.getPastEvents(a,r).then(e=>n.call(t,e,!1))}},estimate:function(e){var t=this;return function(){return l.prepareCall(t,arguments).then(t=>e(...t.args).estimateGas(t.params))}},request:function(e){var t=this;return function(){return l.prepareCall(t,arguments).then(t=>e(...t.args).request(t.params))}},estimateDeployment:function(){var e=this;return l.prepareCall(e,arguments).then(t=>{var n={data:e.binary,arguments:t.args};return delete t.params.data,new e.web3.eth.Contract(e.abi,t.params).deploy(n).estimateGas(t.params)})}});e.exports=l},function(e,t){e.exports=require("events")},function(e,t,n){var a=n(15),r=n(16),o={timeoutMessage:"not mined within",defaultMaxBlocks:50,pollingInterval:1e3,extractReceipt(e){const t=e&&e.includes("{");if(e.includes("}"),t){const t="{"+e.split("{")[1].trim();try{return JSON.parse(t)}catch(e){}}},start:async function(e,t){var n=this,s=o.defaultMaxBlocks,i=n.timeoutBlocks;if(!(t.message&&t.message.includes(o.timeoutMessage))||!(i>s)){var u,c=o.extractReceipt(t.message);if(c){try{await r.receipt(e,c)}catch(e){console.error(e)}return}try{u=await a.get(e.params,n.web3)}catch(e){console.error(e)}return u&&(t.reason=u,t.message+=` -- Reason given: ${u}.`),e.promiEvent.reject(t)}let d=await n.web3.eth.getBlockNumber();const l=setInterval(async()=>{const t=await n.web3.eth.getBlockNumber();t>d&&(d=t,function(t){++s>n.timeoutBlocks?clearInterval(t):n.web3.eth.getTransactionReceipt(e.transactionHash).then(t=>{t&&(t.contractAddress?n.at(t.contractAddress).then(e.promiEvent.resolve).catch(e.promiEvent.reject):n.promiEvent.resolve(t))}).catch(n=>{clearInterval(t),e.promiEvent.reject(n)})}(l))},o.pollingInterval)}};e.exports=o},function(e){e.exports=[{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isPendingRegistration",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"numDarknodesNextEpoch",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"},{name:"_publicKey",type:"bytes"},{name:"_bond",type:"uint256"}],name:"register",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumBond",type:"uint256"}],name:"updateMinimumBond",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"numDarknodes",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodeOwner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextSlasher",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isPendingDeregistration",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_start",type:"address"},{name:"_count",type:"uint256"}],name:"getPreviousDarknodes",outputs:[{name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextMinimumEpochInterval",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumEpochInterval",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_prover",type:"address"},{name:"_challenger1",type:"address"},{name:"_challenger2",type:"address"}],name:"slash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRefundable",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"previousEpoch",outputs:[{name:"epochhash",type:"uint256"},{name:"blocknumber",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextMinimumBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumEpochInterval",type:"uint256"}],name:"updateMinimumEpochInterval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"nextMinimumPodSize",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"numDarknodesPreviousEpoch",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"currentEpoch",outputs:[{name:"epochhash",type:"uint256"},{name:"blocknumber",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRegisteredInPreviousEpoch",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isDeregistered",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumPodSize",type:"uint256"}],name:"updateMinimumPodSize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"}],name:"deregister",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodePublicKey",outputs:[{name:"",type:"bytes"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ren",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"epoch",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"store",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"slasher",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_slasher",type:"address"}],name:"updateSlasher",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodeBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferStoreOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRegistered",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumPodSize",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isDeregisterable",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_start",type:"address"},{name:"_count",type:"uint256"}],name:"getDarknodes",outputs:[{name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRefunded",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_renAddress",type:"address"},{name:"_storeAddress",type:"address"},{name:"_minimumBond",type:"uint256"},{name:"_minimumPodSize",type:"uint256"},{name:"_minimumEpochInterval",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"_darknodeID",type:"address"},{indexed:!1,name:"_bond",type:"uint256"}],name:"LogDarknodeRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"_darknodeID",type:"address"}],name:"LogDarknodeDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"_owner",type:"address"},{indexed:!1,name:"_amount",type:"uint256"}],name:"LogDarknodeOwnerRefunded",type:"event"},{anonymous:!1,inputs:[],name:"LogNewEpoch",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumBond",type:"uint256"},{indexed:!1,name:"nextMinimumBond",type:"uint256"}],name:"LogMinimumBondUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumPodSize",type:"uint256"},{indexed:!1,name:"nextMinimumPodSize",type:"uint256"}],name:"LogMinimumPodSizeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumEpochInterval",type:"uint256"},{indexed:!1,name:"nextMinimumEpochInterval",type:"uint256"}],name:"LogMinimumEpochIntervalUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSlasher",type:"address"},{indexed:!1,name:"nextSlasher",type:"address"}],name:"LogSlasherUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!1,inputs:[{name:"spender",type:"address"},{name:"tokens",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"from",type:"address"},{name:"to",type:"address"},{name:"tokens",type:"uint256"}],name:"transferFrom",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"tokenOwner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"to",type:"address"},{name:"tokens",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"tokenOwner",type:"address"},{name:"spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"tokens",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"tokenOwner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"tokens",type:"uint256"}],name:"Approval",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderConfirmer",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_orderID",type:"bytes32"},{name:"_matchedOrderID",type:"bytes32"}],name:"confirmOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"ordersCount",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_orderID",type:"bytes32"}],name:"cancelOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderBlockNumber",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ren",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_offset",type:"uint256"},{name:"_limit",type:"uint256"}],name:"getOrders",outputs:[{name:"",type:"bytes32[]"},{name:"",type:"address[]"},{name:"",type:"uint8[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orders",outputs:[{name:"state",type:"uint8"},{name:"trader",type:"address"},{name:"confirmer",type:"address"},{name:"settlementID",type:"uint64"},{name:"priority",type:"uint256"},{name:"blockNumber",type:"uint256"},{name:"matchedOrder",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"darknodeRegistry",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderDepth",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_settlementID",type:"uint64"},{name:"_signature",type:"bytes"},{name:"_orderID",type:"bytes32"}],name:"openOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderState",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newDarknodeRegistry",type:"address"}],name:"updateDarknodeRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderMatch",outputs:[{name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderTrader",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderPriority",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"settlementRegistry",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_renAddress",type:"address"},{name:"_darknodeRegistry",type:"address"},{name:"_settlementRegistry",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"previousFee",type:"uint256"},{indexed:!1,name:"nextFee",type:"uint256"}],name:"LogFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousDarknodeRegistry",type:"address"},{indexed:!1,name:"nextDarknodeRegistry",type:"address"}],name:"LogDarknodeRegistryUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[],name:"brokerVerifierContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newSettlementContract",type:"address"}],name:"updateRenExSettlementContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"rewardVaultContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"},{name:"_value",type:"uint256"},{name:"_signature",type:"bytes"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_traderFrom",type:"address"},{name:"_traderTo",type:"address"},{name:"_token",type:"address"},{name:"_value",type:"uint256"},{name:"_fee",type:"uint256"},{name:"_feePayee",type:"address"}],name:"transferBalanceWithFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"},{name:"_value",type:"uint256"}],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{name:"_newBrokerVerifierContract",type:"address"}],name:"updateBrokerVerifierContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"}],name:"signalBackupWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"traderBalances",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"SIGNAL_DELAY",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRewardVaultContract",type:"address"}],name:"updateRewardVaultContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"settlementContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"ETHEREUM",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"traderWithdrawalSignals",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_rewardVaultContract",type:"address"},{name:"_brokerVerifierContract",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"trader",type:"address"},{indexed:!1,name:"token",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"LogBalanceDecreased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"trader",type:"address"},{indexed:!1,name:"token",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"LogBalanceIncreased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExSettlementContract",type:"address"},{indexed:!1,name:"newRenExSettlementContract",type:"address"}],name:"LogRenExSettlementContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRewardVaultContract",type:"address"},{indexed:!1,name:"newRewardVaultContract",type:"address"}],name:"LogRewardVaultContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousBrokerVerifierContract",type:"address"},{indexed:!1,name:"newBrokerVerifierContract",type:"address"}],name:"LogBrokerVerifierContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderStatus",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRenExTokensContract",type:"address"}],name:"updateRenExTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"renExTokensContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"submissionGasPriceLimit",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"getMatchDetails",outputs:[{name:"settled",type:"bool"},{name:"orderIsBuy",type:"bool"},{name:"matchedID",type:"bytes32"},{name:"priorityVolume",type:"uint256"},{name:"secondaryVolume",type:"uint256"},{name:"priorityFee",type:"uint256"},{name:"secondaryFee",type:"uint256"},{name:"priorityToken",type:"uint32"},{name:"secondaryToken",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOrderbookContract",type:"address"}],name:"updateOrderbook",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newSubmissionGasPriceLimit",type:"uint256"}],name:"updateSubmissionGasPriceLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"DARKNODE_FEES_DENOMINATOR",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderSubmitter",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"RENEX_ATOMIC_SETTLEMENT_ID",outputs:[{name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderDetails",outputs:[{name:"settlementID",type:"uint64"},{name:"tokens",type:"uint64"},{name:"price",type:"uint256"},{name:"volume",type:"uint256"},{name:"minimumVolume",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"},{name:"",type:"bytes32"}],name:"matchTimestamp",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"DARKNODE_FEES_NUMERATOR",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newSlasherAddress",type:"address"}],name:"updateSlasher",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_prefix",type:"bytes"},{name:"_settlementID",type:"uint64"},{name:"_tokens",type:"uint64"},{name:"_price",type:"uint256"},{name:"_volume",type:"uint256"},{name:"_minimumVolume",type:"uint256"}],name:"submitOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"orderbookContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_prefix",type:"bytes"},{name:"_settlementID",type:"uint64"},{name:"_tokens",type:"uint64"},{name:"_price",type:"uint256"},{name:"_volume",type:"uint256"},{name:"_minimumVolume",type:"uint256"}],name:"hashOrder",outputs:[{name:"",type:"bytes32"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!0,inputs:[],name:"RENEX_SETTLEMENT_ID",outputs:[{name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_buyID",type:"bytes32"},{name:"_sellID",type:"bytes32"}],name:"settle",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"slasherAddress",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"renExBalancesContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRenExBalancesContract",type:"address"}],name:"updateRenExBalances",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_guiltyOrderID",type:"bytes32"}],name:"slash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_orderbookContract",type:"address"},{name:"_renExTokensContract",type:"address"},{name:"_renExBalancesContract",type:"address"},{name:"_slasherAddress",type:"address"},{name:"_submissionGasPriceLimit",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"previousOrderbook",type:"address"},{indexed:!1,name:"nextOrderbook",type:"address"}],name:"LogOrderbookUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExTokens",type:"address"},{indexed:!1,name:"nextRenExTokens",type:"address"}],name:"LogRenExTokensUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExBalances",type:"address"},{indexed:!1,name:"nextRenExBalances",type:"address"}],name:"LogRenExBalancesUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSubmissionGasPriceLimit",type:"uint256"},{indexed:!1,name:"nextSubmissionGasPriceLimit",type:"uint256"}],name:"LogSubmissionGasPriceLimitUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSlasher",type:"address"},{indexed:!1,name:"nextSlasher",type:"address"}],name:"LogSlasherUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!1,inputs:[{name:"_tokenCode",type:"uint32"}],name:"deregisterToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_tokenCode",type:"uint32"},{name:"_tokenAddress",type:"address"},{name:"_tokenDecimals",type:"uint8"}],name:"registerToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"uint32"}],name:"tokens",outputs:[{name:"addr",type:"address"},{name:"decimals",type:"uint8"},{name:"registered",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"tokenCode",type:"uint32"},{indexed:!1,name:"tokenAddress",type:"address"},{indexed:!1,name:"tokenDecimals",type:"uint8"}],name:"LogTokenRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"tokenCode",type:"uint32"}],name:"LogTokenDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{anonymous:!1,inputs:[{indexed:!0,name:"_owner",type:"address"},{indexed:!0,name:"_approved",type:"address"},{indexed:!1,name:"_tokenId",type:"uint256"}],name:"Approval",type:"event"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"_from",type:"address"},{indexed:!0,name:"_to",type:"address"},{indexed:!1,name:"_tokenId",type:"uint256"}],name:"Transfer",type:"event"},{constant:!1,inputs:[{name:"_tokenId",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_tokenId",type:"uint256"}],name:"takeOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"transfer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},{constant:!0,inputs:[{name:"_tokenId",type:"uint256"}],name:"approvedFor",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_tokenId",type:"uint256"}],name:"ownerOf",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"tokensOf",outputs:[{name:"",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultConfig={network:"mainnet",autoNormalizeOrders:!1,storageProvider:"localStorage"},t.generateConfig=function(e){e=e||{};const n=t.defaultConfig;return void 0!==e.network&&(n.network=e.network),void 0!==e.autoNormalizeOrders&&(n.autoNormalizeOrders=e.autoNormalizeOrders),void 0!==e.storageProvider&&(n.storageProvider=e.storageProvider),n}},function(e,t){e.exports=require("node-rsa")},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=n(2),o=a(n(30)),s=n(10);t.PRIME=new r.BN("17012364981921935471");class i{constructor(e,t){this.index=e,this.value=t}}t.Share=i,t.split=function(e,n,a){if(e<n)throw new Error(`n-k error: n = ${e}, k = ${n}`);if(t.PRIME.lte(a))throw new Error("finite field error: secret is too big");const u=new Array(n);u[0]=a;for(let e=1;e<n;e++){let n=new r.BN(0);const a=new Int32Array(2);do{const e=o.randomBytes(a.length);a.set(e),n=new r.BN(Math.abs(a[0])).pow(new r.BN(2)).add(new r.BN(Math.abs(a[1])))}while(n.gte(t.PRIME));u[e]=n}const c=new Array(n);for(let n=1;n<=e;n++){let e=u[0];const a=new r.BN(n);let o=a.mod(t.PRIME);for(let n=1;n<u.length;n++){const r=u[n].mul(o).mod(t.PRIME);e=e.add(r).mod(t.PRIME),o=o.mul(a).mod(t.PRIME)}c[n-1]=new i(n,e)}return s.List(c)},t.join=function(e){let n=new r.BN(0);for(let a=0;a<e.size;a++){let o=new r.BN(1),s=new r.BN(1);for(let n=0;n<e.size;n++){if(a===n)continue;const i=e.get(a);if(void 0===i)throw new Error("accessing invalid share");const u=new r.BN(i.index),c=e.get(n);if(void 0===c)throw new Error("accessing invalid share");const d=new r.BN(c.index),l=o.mul(d).mod(t.PRIME);o=t.PRIME.sub(l);const p=u.sub(d).mod(t.PRIME);s=s.mul(p).mod(t.PRIME)}s=s.invm(t.PRIME);const i=e.get(a);if(void 0===i)throw new Error("accessing invalid share");let u=i.value.mul(o).mod(t.PRIME);u=u.mul(s).mod(t.PRIME),n=n.add(u).mod(t.PRIME)}return n}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(4);t.adjustDecimals=((e,t,n)=>{if(e=r.default.isBigNumber(e)||e instanceof r.default?new r.default(e.toFixed()):new r.default(e.toString()),t<n)return new o.BN(e.multipliedBy(new r.default(10).exponentiatedBy(n-t)).toFixed());{const a=e.dividedBy(new r.default(10).exponentiatedBy(t-n));if(!a.integerValue(r.default.ROUND_FLOOR).eq(a))throw new Error(`${s.ErrNumericalPrecision}: converting ${e} from ${t} to ${n} decimals`);return new o.BN(a.toFixed())}})},function(e,t){e.exports=require("bs58")},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(59)),o=a(n(60));t.networks={mainnet:r,testnet:o}},function(e){e.exports={network:"mainnet",ingress:"https://renex-ingress-mainnet.herokuapp.com",infura:"https://mainnet.infura.io",etherscan:"https://etherscan.io",ethNetwork:"main",ethNetworkLabel:"Main",ledgerNetworkId:42,contracts:[{darknodeRegistry:"0x3799006a87FDE3CCFC7666B3E6553B03ED341c2F",orderbook:"0x6b8bB175c092DE7d81860B18DB360B734A2598e0",renExTokens:"0x7cAde4fbc8761817bb62A080733D1B6CaD744ec4",renExBalances:"0x5eC18B477B20aF940807B5478dB5A64Cd4a77EFd",renExSettlement:"0x908262dE0366E42d029B0518D5276762c92B21e1",wyre:"0x9f2a7b5E6280727cd6c8486f5F96E5f76164F2DF"}],tokens:{TUSD:"0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E",DGX:"0x4f3AfEC4E5a3F2A6a1A411DEF7D7dFe50eE057bF",REN:"0x408e41876cCCDC0F92210600ef50372656052a38",OMG:"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07",ZRX:"0xE41d2489571d322189246DaFA5ebDe1F4699F498"}}},function(e){e.exports={network:"testnet",ingress:"https://renex-ingress-testnet.herokuapp.com",infura:"https://kovan.infura.io",etherscan:"https://kovan.etherscan.io",ethNetwork:"kovan",ethNetworkLabel:"Kovan",ledgerNetworkId:42,contracts:[{darknodeRegistry:"0x75Fa8349fc9C7C640A4e9F1A1496fBB95D2Dc3d5",orderbook:"0xA9b453FC64b4766Aab8a867801d0a4eA7b1474E0",renExTokens:"0x481b39E2000a117CBA417473DC1E7cdAf4EAd98F",renExBalances:"0xb0E21B869D6f741a8A8F5075BA59E496593B881A",renExSettlement:"0x65A699E555cf93e4e115FfC2DE2F41d5A21DF3Fb",wyre:"0xB14fA2276D8bD26713A6D98871b2d63Da9eefE6f"}],tokens:{TUSD:"0x525389752ffe6487d33EF53FBcD4E5D3AD7937a0",DGX:"0x932F4580B261e9781A6c3c102133C8fDd4503DFc",REN:"0x2CD647668494c1B15743AB283A0f980d90a87394",OMG:"0x66497ba75dD127b46316d806c077B06395918064",ZRX:"0x6EB628dCeFA95802899aD3A9EE0C7650Ac63d543"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MemoryStorage=class{constructor(){this.orders=new Map,this.balanceActions=new Map}async setOrder(e){this.orders.set(e.id,e)}async getOrder(e){return this.orders.get(e)}async getOrders(){return Array.from(this.orders.values())}async setBalanceAction(e){this.balanceActions.set(e.txHash,e)}async getBalanceAction(e){return this.balanceActions.get(e)}async getBalanceActions(){return Array.from(this.balanceActions.values())}}}]);
//# sourceMappingURL=index.js.map